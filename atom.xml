<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MakeItPossible16</title>
  <subtitle>写点东西吧,程序员</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://makeitpossible16.github.io/"/>
  <updated>2016-11-24T15:47:00.842Z</updated>
  <id>https://makeitpossible16.github.io/</id>
  
  <author>
    <name>MakeItPossible16</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>golang学习</title>
    <link href="https://makeitpossible16.github.io/2016/11/23/golang%E5%AD%A6%E4%B9%A0/"/>
    <id>https://makeitpossible16.github.io/2016/11/23/golang学习/</id>
    <published>2016-11-23T00:00:00.000Z</published>
    <updated>2016-11-24T15:47:00.842Z</updated>
    
    <content type="html"><![CDATA[<p>在看seaweedfs过程中遇到的go 语法,不会的记录一下.</p>
<h2 id="interface-是一组method的组合-通过interface来定义对象的一组行为"><a href="#interface-是一组method的组合-通过interface来定义对象的一组行为" class="headerlink" title="interface: 是一组method的组合,通过interface来定义对象的一组行为."></a>interface: 是一组method的组合,通过interface来定义对象的一组行为.</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> Sequencer <span class="keyword">interface</span> &#123;</div><div class="line">	NextFileId(count <span class="keyword">uint64</span>) (<span class="keyword">uint64</span>, <span class="keyword">uint64</span>)</div><div class="line">	SetMax(<span class="keyword">uint64</span>)</div><div class="line">	Peek() <span class="keyword">uint64</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="go-map"><a href="#go-map" class="headerlink" title="go map"></a>go map</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">t.children = <span class="built_in">make</span>(<span class="keyword">map</span>[NodeId]Node)  <span class="comment">// NodeId --&gt; Node</span></div></pre></td></tr></table></figure>
<h2 id="go-sync-RWMutex和sync-Mutex"><a href="#go-sync-RWMutex和sync-Mutex" class="headerlink" title="go sync.RWMutex和sync.Mutex"></a>go <a href="http://studygolang.com/articles/3373" target="_blank" rel="external">sync.RWMutex和sync.Mutex</a></h2><p>golang中sync包实现了两种锁Mutex （互斥锁）和RWMutex（读写锁），其中RWMutex是基于Mutex实现的，只读锁的实现使用类似引用计数器的功能．<br><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> Mutex</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">func</span> <span class="params">(m *Mutex)</span> <span class="title">Lock</span><span class="params">()</span></span></div><div class="line">    <span class="title">func</span> <span class="params">(m *Mutex)</span> <span class="title">Unlock</span><span class="params">()</span></div></pre></td></tr></table></figure></p>
<p>Mutex为互斥锁，Lock()加锁，Unlock()解锁，使用Lock()加锁后，便不能再次对其进行加锁，直到利用Unlock()解锁对其解锁后，才能再次加锁．适用于读写不确定场景，即读写次数没有明显的区别，并且只允许只有一个读或者写的场景，所以该锁也叫做全局锁．</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> RWMutex</div><div class="line">    <span class="function"><span class="keyword">func</span> <span class="params">(rw *RWMutex)</span> <span class="title">Lock</span><span class="params">()</span></span></div><div class="line">    <span class="title">func</span> <span class="params">(rw *RWMutex)</span> <span class="title">RLock</span><span class="params">()</span></div><div class="line">    <span class="title">func</span> <span class="params">(rw *RWMutex)</span> <span class="title">RLocker</span><span class="params">()</span> <span class="title">Locker</span></div><div class="line">    <span class="title">func</span> <span class="params">(rw *RWMutex)</span> <span class="title">RUnlock</span><span class="params">()</span></div><div class="line">    <span class="title">func</span> <span class="params">(rw *RWMutex)</span> <span class="title">Unlock</span><span class="params">()</span></div></pre></td></tr></table></figure>
<p>func (rw <em>RWMutex) Lock()　　写锁，如果在添加写锁之前已经有其他的读锁和写锁，则lock就会阻塞直到该锁可用，为确保该锁最终可用，已阻塞的 Lock 调用会从获得的锁中排除新的读取器，即写锁权限高于读锁，有写锁时优先进行写锁定<br> func (rw </em>RWMutex) Unlock()　写锁解锁，如果没有进行写锁定，则就会引起一个运行时错误．<br> func (rw *RWMutex) RLock() 读锁，当有写锁时，无法加载读锁，当只有读锁或者没有锁时，可以加载读锁，读锁可以加载多个，所以适用于＂读多写少＂的场景</p>
<p>func (rw *RWMutex)RUnlock()　读锁解锁，RUnlock 撤销单次 RLock 调用，它对于其它同时存在的读取器则没有效果。若 rw 并没有为读取而锁定，调用 RUnlock 就会引发一个运行时错误(注：这种说法在go1.3版本中是不对的，例如下面这个例子)。</p>
<h2 id="go-Routine和Channel"><a href="#go-Routine和Channel" class="headerlink" title="go Routine和Channel"></a>go Routine和Channel</h2><p><a href="http://blog.csdn.net/colouful987/article/details/45190319" target="_blank" rel="external">go学习笔记_Routine和Channel上</a></p>
<p>goroutine 类似开辟进程、线程做法<br>语法：</p>
<pre><code>1. 定义一个函数functionName，要异步调用时使用语句go functionName即可。

2. 使用匿名函数，用法为go func(参数列表){函数执行体}()，说明最后一个()作用就是让该函数执行。
</code></pre><p>代码：</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/////////第一种示例代码：///////////</span></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">sayHello</span><span class="params">(name <span class="keyword">string</span>)</span></span>&#123;</div><div class="line">    fmt.Println(<span class="string">"hello"</span>+name)</div><div class="line">&#125;</div><div class="line"><span class="comment">//主程序入口</span></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">go</span> sayHello(<span class="string">"PMST"</span>)</div><div class="line">&#125;</div><div class="line"><span class="comment">/////////第二种示例代码：//////////</span></div><div class="line"><span class="comment">//主程序入口</span></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span>&#123;</div><div class="line">        fmt.Println(<span class="string">"hello world"</span>)</div><div class="line">    &#125;()     <span class="comment">//别忘记这里的()</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>一旦将go放在函数之前，意味分配一个子routine让这个函数自个玩去(有点自身自灭的感觉),而主routine则继续该干嘛干嘛。</p>
<p>channel<br>goroutine 之间进行数据通信方式：</p>
<ol>
<li>共用内存内存空间。</li>
<li>Go语言推荐的通信机制channel。</li>
</ol>
<p>通过make来创建channel,例如<br>无缓存ci := make(chan int),<br>指定缓存cib := make(chan int,2)。给这个通道分类了2个缓存空间</p>
<p>通道的接收和发送都是阻塞的，除非与之对应的一端已经准备好<br>阻塞状态：</p>
<ol>
<li>数据写入channel（或缓存已满）却没读出</li>
<li>channel中没有数据，读channel会阻塞。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在看seaweedfs过程中遇到的go 语法,不会的记录一下.&lt;/p&gt;
&lt;h2 id=&quot;interface-是一组method的组合-通过interface来定义对象的一组行为&quot;&gt;&lt;a href=&quot;#interface-是一组method的组合-通过interface来定义
    
    </summary>
    
      <category term="go" scheme="https://makeitpossible16.github.io/categories/go/"/>
    
    
      <category term="go" scheme="https://makeitpossible16.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>seaweedfs源码阅读记录2</title>
    <link href="https://makeitpossible16.github.io/2016/11/22/seaweedfs%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E8%AE%B0%E5%BD%952/"/>
    <id>https://makeitpossible16.github.io/2016/11/22/seaweedfs源码阅读记录2/</id>
    <published>2016-11-22T00:00:00.000Z</published>
    <updated>2016-11-28T11:57:03.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="master启动过程"><a href="#master启动过程" class="headerlink" title="master启动过程"></a>master启动过程</h2><p>使用pycharm , 入口为weed.go, 根据参数调用command文件夹下的文件.<br>opology 核心模块，主要包括 【DataCenter, Rack, DataNode】 三层拓扑结构,<br>参考文章： <a href="http://blog.csdn.net/baogang409/article/details/42105367" target="_blank" rel="external">weed-fs 源码解读</a></p>
<p><img src="http://oh56h8a9l.bkt.clouddn.com/master启动-20161128.svg" alt="master启动-20161128"><br><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> Sequencer <span class="keyword">interface</span> &#123;</div><div class="line">	NextFileId(count <span class="keyword">uint64</span>) (<span class="keyword">uint64</span>, <span class="keyword">uint64</span>)</div><div class="line">	SetMax(<span class="keyword">uint64</span>)</div><div class="line">	Peek() <span class="keyword">uint64</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>topology中包含Sequencer , sequence 负责FileID的全局有序生成</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> Topology <span class="keyword">struct</span> &#123;</div><div class="line">	NodeImpl   <span class="comment">//指向NodeImpl对象，即Topology和node相互指向</span></div><div class="line"></div><div class="line">	collectionMap *util.ConcurrentReadMap</div><div class="line"></div><div class="line">	pulse <span class="keyword">int64</span></div><div class="line"></div><div class="line">	volumeSizeLimit <span class="keyword">uint64</span></div><div class="line"></div><div class="line">	Sequence sequence.Sequencer</div><div class="line"></div><div class="line">	chanDeadDataNodes      <span class="keyword">chan</span> *DataNode</div><div class="line">	chanRecoveredDataNodes <span class="keyword">chan</span> *DataNode</div><div class="line">	chanFullVolumes        <span class="keyword">chan</span> storage.VolumeInfo</div><div class="line"></div><div class="line">	configuration *Configuration</div><div class="line"></div><div class="line">	RaftServer raft.Server</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>NodeImpl结构<br><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> NodeImpl <span class="keyword">struct</span> &#123;</div><div class="line">	id                NodeId</div><div class="line">	volumeCount       <span class="keyword">int</span></div><div class="line">	activeVolumeCount <span class="keyword">int</span></div><div class="line">	maxVolumeCount    <span class="keyword">int</span></div><div class="line">	parent            Node</div><div class="line">	sync.RWMutex      <span class="comment">// lock children</span></div><div class="line">	children          <span class="keyword">map</span>[NodeId]Node</div><div class="line">	maxVolumeId       storage.VolumeId</div><div class="line"></div><div class="line">	<span class="comment">//for rack, data center, topology</span></div><div class="line">	nodeType <span class="keyword">string</span></div><div class="line">	value    <span class="keyword">interface</span>&#123;&#125;  <span class="comment">//指向Topology对象，即Topology和node相互指向</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>DataNode数据结构<br><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> DataNode <span class="keyword">struct</span> &#123;</div><div class="line">	NodeImpl</div><div class="line">	volumes   <span class="keyword">map</span>[storage.VolumeId]storage.VolumeInfo</div><div class="line">	Ip        <span class="keyword">string</span></div><div class="line">	Port      <span class="keyword">int</span></div><div class="line">	PublicUrl <span class="keyword">string</span></div><div class="line">	LastSeen  <span class="keyword">int64</span> <span class="comment">// unix time in seconds</span></div><div class="line">	Dead      <span class="keyword">bool</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> VolumeInfo <span class="keyword">struct</span> &#123;</div><div class="line">	Id               VolumeId</div><div class="line">	Size             <span class="keyword">uint64</span></div><div class="line">	ReplicaPlacement *ReplicaPlacement</div><div class="line">	Ttl              *TTL</div><div class="line">	Collection       <span class="keyword">string</span></div><div class="line">	Version          Version</div><div class="line">	FileCount        <span class="keyword">int</span></div><div class="line">	DeleteCount      <span class="keyword">int</span></div><div class="line">	DeletedByteCount <span class="keyword">uint64</span></div><div class="line">	ReadOnly         <span class="keyword">bool</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>通过RaftServer的raft协议，完成多个weedmaster间投票选leader的事情,<br>当启动多个ServerMaster时，它们之间会进行通信，通过raft协议选举出一个Leader，对所有的master进行管理。<br>weed-fs中，通过使用raftServer完成上述选举过程；而raftServer则是用到了第三方资源，即goRaft（参照<a href="http://ayende.com/blog/165858/reviewing-go-raft-part-i）。" target="_blank" rel="external">http://ayende.com/blog/165858/reviewing-go-raft-part-i）。</a><br><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> RaftServer <span class="keyword">struct</span> &#123;</div><div class="line">	peers      []<span class="keyword">string</span> <span class="comment">// initial peers to join with</span></div><div class="line">	raftServer raft.Server  <span class="comment">//使用goraft //type Server interface 包含实现raft的方法</span></div><div class="line">	dataDir    <span class="keyword">string</span></div><div class="line">	httpAddr   <span class="keyword">string</span></div><div class="line">	router     *mux.Router</div><div class="line">	topo       *topology.Topology</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;master启动过程&quot;&gt;&lt;a href=&quot;#master启动过程&quot; class=&quot;headerlink&quot; title=&quot;master启动过程&quot;&gt;&lt;/a&gt;master启动过程&lt;/h2&gt;&lt;p&gt;使用pycharm , 入口为weed.go, 根据参数调用command文
    
    </summary>
    
      <category term="文件存储" scheme="https://makeitpossible16.github.io/categories/%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/"/>
    
    
      <category term="go" scheme="https://makeitpossible16.github.io/tags/go/"/>
    
      <category term="seaweedfs" scheme="https://makeitpossible16.github.io/tags/seaweedfs/"/>
    
  </entry>
  
  <entry>
    <title>seaweedfs源码阅读记录1</title>
    <link href="https://makeitpossible16.github.io/2016/11/22/seaweedfs%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E8%AE%B0%E5%BD%95/"/>
    <id>https://makeitpossible16.github.io/2016/11/22/seaweedfs源码阅读记录/</id>
    <published>2016-11-22T00:00:00.000Z</published>
    <updated>2016-11-26T14:02:43.639Z</updated>
    
    <content type="html"><![CDATA[<p>接下来的日子都会抽出部分时间学习文件存储,目标是修改openstack-swift的源码,通过源码学习文件存储知识.目前学习对象:<a href="https://github.com/chrislusf/seaweedfs" target="_blank" rel="external">seaweedfs</a>.</p>
<h2 id="目标-学习seaweedfs-的文件合并存储"><a href="#目标-学习seaweedfs-的文件合并存储" class="headerlink" title="目标:学习seaweedfs 的文件合并存储"></a>目标:学习seaweedfs 的文件合并存储</h2><p>文件合并后必然会带来的一堆问题待解决,比如文件索引,响应速率等.</p>
<h2 id="学习方式-google-调试"><a href="#学习方式-google-调试" class="headerlink" title="学习方式: google + 调试"></a>学习方式: google + 调试</h2><p>github 上能找到项目的wiki文档,会介绍简单的使用.调试方案: IDEA/pycharm , 需要结合atom/vscode 的delve调试go程序,各有利弊,结合使用.</p>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="http://yanyiwu.com/work/2015/01/09/weed-fs-source-analysis.html" target="_blank" rel="external">分布式存储Seaweedfs源码分析</a></p>
<p><a href="http://tonybai.com/2015/08/22/intro-of-using-weedfs/" target="_blank" rel="external">tonybai的个人blog</a></p>
<p><a href="http://www.tuicool.com/articles/yyUr2e" target="_blank" rel="external">weed-fs 源码解读—分布式处理过程</a></p>
<p><a href="http://blog.csdn.net/baogang409/article/details/42105367" target="_blank" rel="external">weed-fs 源码解读</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;接下来的日子都会抽出部分时间学习文件存储,目标是修改openstack-swift的源码,通过源码学习文件存储知识.目前学习对象:&lt;a href=&quot;https://github.com/chrislusf/seaweedfs&quot; target=&quot;_blank&quot; rel=&quot;ex
    
    </summary>
    
      <category term="文件存储" scheme="https://makeitpossible16.github.io/categories/%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/"/>
    
    
      <category term="go" scheme="https://makeitpossible16.github.io/tags/go/"/>
    
      <category term="seaweedfs" scheme="https://makeitpossible16.github.io/tags/seaweedfs/"/>
    
  </entry>
  
  <entry>
    <title>nodeJS入门总结</title>
    <link href="https://makeitpossible16.github.io/2016/11/20/nodeJS%E5%85%A5%E9%97%A8%E6%80%BB%E7%BB%93/"/>
    <id>https://makeitpossible16.github.io/2016/11/20/nodeJS入门总结/</id>
    <published>2016-11-20T00:00:00.000Z</published>
    <updated>2016-11-24T14:55:44.836Z</updated>
    
    <content type="html"><![CDATA[<p>刚做完nodeJS的课设,写了个小程序,总结一下</p>
<h2 id="程序功能"><a href="#程序功能" class="headerlink" title="程序功能"></a>程序功能</h2><p>实现简单的电商网站,能登陆,注册,浏览商品,购物车操作.</p>
<h2 id="使用技术"><a href="#使用技术" class="headerlink" title="使用技术"></a>使用技术</h2><ol>
<li>nodeJS + Express + ejs</li>
<li>mongoDB + mongoose</li>
<li>bootstrap + jquery (前端页面是在网上找的,随便改了一下)</li>
</ol>
<h2 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h2><p><a href="https://github.com/MakeItPossible16/washingMachine.git" target="_blank" rel="external">github</a></p>
<h2 id="有关mongoose"><a href="#有关mongoose" class="headerlink" title="有关mongoose"></a>有关mongoose</h2><p>mongoose实现了把mongodb中的数据进行映射,可以直接使用mongoose对数据库进行操作,比较方便.使用嵌套document时,需要创建多个Schema(类似于Java中的POJO吧).<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> contactInformationSchema = <span class="keyword">new</span> Schema(&#123;</div><div class="line">    <span class="attr">address</span>: <span class="built_in">String</span>,</div><div class="line">    <span class="attr">phone</span>: <span class="built_in">String</span></div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="keyword">var</span> alreadyPaidSchema = <span class="keyword">new</span> Schema(&#123;</div><div class="line">    <span class="attr">productID</span>: Schema.Types.ObjectId,</div><div class="line">    <span class="attr">price</span>: <span class="built_in">Number</span>,</div><div class="line">    <span class="attr">address</span>: <span class="built_in">String</span>,</div><div class="line">    <span class="attr">phone</span>: <span class="built_in">String</span>,</div><div class="line">    <span class="attr">userName</span>: <span class="built_in">String</span></div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="keyword">var</span> unpaidSchema = <span class="keyword">new</span> Schema(&#123;</div><div class="line">    <span class="attr">productID</span>: Schema.Types.ObjectId,</div><div class="line">    <span class="attr">price</span>: <span class="built_in">Number</span></div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="keyword">var</span> schema = <span class="keyword">new</span> Schema(&#123;</div><div class="line">    <span class="attr">username</span>: <span class="built_in">String</span>,</div><div class="line">    <span class="attr">password</span>: <span class="built_in">String</span>,</div><div class="line">    <span class="attr">contactInformation</span>: [contactInformationSchema],</div><div class="line">    <span class="attr">alreadyPaid</span>: [alreadyPaidSchema],</div><div class="line">    <span class="attr">unpaid</span>: [unpaidSchema]</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<h2 id="有关nodeJS"><a href="#有关nodeJS" class="headerlink" title="有关nodeJS"></a>有关nodeJS</h2><p>最大的优点就是回调,实现网站的并发访问. 不过缺点也不少,可能是我经验不足,记录一下掉过的坑.</p>
<h3 id="1-回调-感觉就像是不负责任地甩锅"><a href="#1-回调-感觉就像是不负责任地甩锅" class="headerlink" title="1. 回调,感觉就像是不负责任地甩锅."></a>1. 回调,感觉就像是不负责任地甩锅.</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> test;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; array.length; i++) &#123;</div><div class="line">  test = array[i];</div><div class="line">  mongooseModel.find(&#123;<span class="string">"something"</span>:test&#125;).exec(<span class="function"><span class="keyword">function</span>(<span class="params">err,document</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> test1 = test; <span class="comment">//此时的test可能已经是下一循环的值</span></div><div class="line">  &#125;)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="2-回调-导致代码层层嵌套"><a href="#2-回调-导致代码层层嵌套" class="headerlink" title="2. 回调,导致代码层层嵌套"></a>2. 回调,导致代码层层嵌套</h3><h3 id="3-单进程-一旦进程发生阻塞-这个程序都会阻塞"><a href="#3-单进程-一旦进程发生阻塞-这个程序都会阻塞" class="headerlink" title="3. 单进程,一旦进程发生阻塞,这个程序都会阻塞"></a>3. 单进程,一旦进程发生阻塞,这个程序都会阻塞</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</div><div class="line">  <span class="comment">//整个程序陷入死循环</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="4-还是回调-导致数据库跨collection查询困难"><a href="#4-还是回调-导致数据库跨collection查询困难" class="headerlink" title="4. 还是回调,导致数据库跨collection查询困难"></a>4. 还是回调,导致数据库跨collection查询困难</h3><h3 id="5-Express-中的模板应谨慎使用"><a href="#5-Express-中的模板应谨慎使用" class="headerlink" title="5. Express 中的模板应谨慎使用."></a>5. Express 中的模板应谨慎使用.</h3><p>我在项目中大量使用了ejs模板,当初就是为了图方便,直接使用ejs,实际上模板只应在静态文件中使用,也就是能保证模板中的内容在多个页面中同时适用,对于内容变化比较的页面,还是乖乖地写接口,返回JSON数据比较靠谱.</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>项目总体还是比较失败,不过也能学点东西. 比如 nodeJS , mongodb, 还有一点前端知识</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;刚做完nodeJS的课设,写了个小程序,总结一下&lt;/p&gt;
&lt;h2 id=&quot;程序功能&quot;&gt;&lt;a href=&quot;#程序功能&quot; class=&quot;headerlink&quot; title=&quot;程序功能&quot;&gt;&lt;/a&gt;程序功能&lt;/h2&gt;&lt;p&gt;实现简单的电商网站,能登陆,注册,浏览商品,购物车操作.&lt;/
    
    </summary>
    
      <category term="网站相关" scheme="https://makeitpossible16.github.io/categories/%E7%BD%91%E7%AB%99%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="nodeJS" scheme="https://makeitpossible16.github.io/tags/nodeJS/"/>
    
      <category term="mongodb" scheme="https://makeitpossible16.github.io/tags/mongodb/"/>
    
      <category term="Express" scheme="https://makeitpossible16.github.io/tags/Express/"/>
    
      <category term="mongoose" scheme="https://makeitpossible16.github.io/tags/mongoose/"/>
    
  </entry>
  
  <entry>
    <title>cloudstack 搭建总结</title>
    <link href="https://makeitpossible16.github.io/2016/11/20/cloudstack%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/"/>
    <id>https://makeitpossible16.github.io/2016/11/20/cloudstack搭建总结/</id>
    <published>2016-11-20T00:00:00.000Z</published>
    <updated>2016-11-23T04:37:32.945Z</updated>
    
    <content type="html"><![CDATA[<p>按照官网的教程搭建<a href="http://docs.cloudstack.apache.org/projects/cloudstack-installation/en/4.8/overview/index.html" target="_blank" rel="external">cloudstack</a>,稍不注意,就出现错误.总结一下.</p>
<h2 id="子节点状态不对"><a href="#子节点状态不对" class="headerlink" title="子节点状态不对"></a>子节点状态不对</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@node3 ~]<span class="comment"># service cloudstack-agent status</span></div><div class="line"></div><div class="line">cloudstack-agent dead but subsys locked</div></pre></td></tr></table></figure>
<p>解决：管理节点防火墙问题，正常状态下计算节点应通过NFS挂载主存储,管理节点应开放8250端口</p>
<p>执行完后把cloudstack-agent 重启一下，其状态应为running</p>
<h2 id="系统VM-状态为Starting"><a href="#系统VM-状态为Starting" class="headerlink" title="系统VM 状态为Starting"></a>系统VM 状态为Starting</h2><p>解决：在数据库中将这个虚拟机的状态由“Starting”更改成“Stopped”，重新启动虚拟机即可。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">MySQL -uroot -p -e "<span class="keyword">update</span> cloud.vm_instance <span class="keyword">set</span> state=<span class="string">'Stopped'</span> <span class="keyword">where</span> <span class="keyword">name</span>=VMNAME</div></pre></td></tr></table></figure>
<h2 id="系统VM-状态为Running-代理状态为空（centos6-5-图形化界面下的防火墙重启会清空iptables-文件下的规则）"><a href="#系统VM-状态为Running-代理状态为空（centos6-5-图形化界面下的防火墙重启会清空iptables-文件下的规则）" class="headerlink" title="系统VM 状态为Running , 代理状态为空（centos6.5 图形化界面下的防火墙重启会清空iptables 文件下的规则）"></a>系统VM 状态为Running , 代理状态为空（centos6.5 图形化界面下的防火墙重启会清空iptables 文件下的规则）</h2><p>防火墙问题</p>
<p>管理节点也用作计算节点，防火墙状态应为</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Generated by iptables-save v1.4.7 on Thu Jun  2 13:23:26 2016</span></div><div class="line">*nat</div><div class="line">:PREROUTING ACCEPT [187042:40599771]</div><div class="line">:POSTROUTING ACCEPT [36644:2281945]</div><div class="line">:OUTPUT ACCEPT [36644:2281945]</div><div class="line">COMMIT</div><div class="line"><span class="comment"># Completed on Thu Jun  2 13:23:26 2016</span></div><div class="line"><span class="comment"># Generated by iptables-save v1.4.7 on Thu Jun  2 13:23:26 2016</span></div><div class="line">*filter</div><div class="line">:INPUT ACCEPT [0:0]</div><div class="line">:FORWARD ACCEPT [0:0]</div><div class="line">:OUTPUT ACCEPT [13422:54204084]</div><div class="line">:BF-cloud0 - [0:0]</div><div class="line">:BF-cloud0-IN - [0:0]</div><div class="line">:BF-cloud0-OUT - [0:0]</div><div class="line">-A INPUT -p tcp -m tcp --dport 49152:49216 -j ACCEPT</div><div class="line">-A INPUT -p tcp -m tcp --dport 5900:6100 -j ACCEPT</div><div class="line">-A INPUT -p tcp -m tcp --dport 16509 -j ACCEPT</div><div class="line">-A INPUT -p tcp -m tcp --dport 1798 -j ACCEPT</div><div class="line">-A INPUT -p tcp -m tcp --dport 22 -j ACCEPT</div><div class="line">-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT</div><div class="line">-A INPUT -p icmp -j ACCEPT</div><div class="line">-A INPUT -i lo -j ACCEPT</div><div class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT</div><div class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT</div><div class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 5900 -j ACCEPT</div><div class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 5901 -j ACCEPT</div><div class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 5902 -j ACCEPT</div><div class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 8080 -j ACCEPT</div><div class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 8250 -j ACCEPT</div><div class="line">-A INPUT <span class="_">-s</span> 172.31.156.0/24 -p udp -m state --state NEW -m udp --dport 111 -j ACCEPT</div><div class="line">-A INPUT <span class="_">-s</span> 172.31.156.0/24 -p tcp -m state --state NEW -m tcp --dport 111 -j ACCEPT</div><div class="line">-A INPUT <span class="_">-s</span> 172.31.156.0/24 -p tcp -m state --state NEW -m tcp --dport 2049 -j ACCEPT</div><div class="line">-A INPUT <span class="_">-s</span> 172.31.156.0/24 -p tcp -m state --state NEW -m tcp --dport 32803 -j ACCEPT</div><div class="line">-A INPUT <span class="_">-s</span> 172.31.156.0/24 -p udp -m state --state NEW -m udp --dport 32769 -j ACCEPT</div><div class="line">-A INPUT <span class="_">-s</span> 172.31.156.0/24 -p tcp -m state --state NEW -m tcp --dport 892 -j ACCEPT</div><div class="line">-A INPUT <span class="_">-s</span> 172.31.156.0/24 -p udp -m state --state NEW -m udp --dport 892 -j ACCEPT</div><div class="line">-A INPUT <span class="_">-s</span> 172.31.156.0/24 -p tcp -m state --state NEW -m tcp --dport 875 -j ACCEPT</div><div class="line">-A INPUT <span class="_">-s</span> 172.31.156.0/24 -p udp -m state --state NEW -m udp --dport 875 -j ACCEPT</div><div class="line">-A INPUT <span class="_">-s</span> 172.31.156.0/24 -p tcp -m state --state NEW -m tcp --dport 662 -j ACCEPT</div><div class="line">-A INPUT <span class="_">-s</span> 172.31.156.0/24 -p udp -m state --state NEW -m udp --dport 662 -j ACCEPT</div><div class="line">-A INPUT -j REJECT --reject-with icmp-host-prohibited</div><div class="line">-A FORWARD -o cloud0 -m physdev --physdev-is-bridged -j BF-cloud0</div><div class="line">-A FORWARD -i cloud0 -m physdev --physdev-is-bridged -j BF-cloud0</div><div class="line">-A FORWARD -o cloud0 -j DROP</div><div class="line">-A FORWARD -i cloud0 -j DROP</div><div class="line">-A FORWARD -j REJECT --reject-with icmp-host-prohibited</div><div class="line">-A BF-cloud0 -m state --state RELATED,ESTABLISHED -j ACCEPT</div><div class="line">-A BF-cloud0 -m physdev --physdev-is-in --physdev-is-bridged -j BF-cloud0-IN</div><div class="line">-A BF-cloud0 -m physdev --physdev-is-out --physdev-is-bridged -j BF-cloud0-OUT</div><div class="line">-A BF-cloud0 -m physdev --physdev-out vnet0 --physdev-is-bridged -j ACCEPT</div><div class="line">COMMIT</div><div class="line"><span class="comment"># Completed on Thu Jun  2 13:23:26 2016</span></div></pre></td></tr></table></figure>
<p>计算节点防火墙状态</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Generated by iptables-save v1.4.7 on Wed Jun  1 19:37:24 2016</span></div><div class="line">*mangle</div><div class="line">:PREROUTING ACCEPT [654:130068]</div><div class="line">:INPUT ACCEPT [210:107800]</div><div class="line">:FORWARD ACCEPT [0:0]</div><div class="line">:OUTPUT ACCEPT [143:8276]</div><div class="line">:POSTROUTING ACCEPT [143:8276]</div><div class="line">-A POSTROUTING -o virbr0 -p udp -m udp --dport 68 -j CHECKSUM --checksum-fill</div><div class="line">-A POSTROUTING -o virbr0 -p udp -m udp --dport 68 -j CHECKSUM --checksum-fill</div><div class="line">COMMIT</div><div class="line"><span class="comment"># Completed on Wed Jun  1 19:37:24 2016</span></div><div class="line"><span class="comment"># Generated by iptables-save v1.4.7 on Wed Jun  1 19:37:24 2016</span></div><div class="line">*nat</div><div class="line">:PREROUTING ACCEPT [0:0]</div><div class="line">:POSTROUTING ACCEPT [0:0]</div><div class="line">:OUTPUT ACCEPT [0:0]</div><div class="line">COMMIT</div><div class="line"><span class="comment"># Completed on Wed Jun  1 19:37:24 2016</span></div><div class="line"><span class="comment"># Generated by iptables-save v1.4.7 on Wed Jun  1 19:37:24 2016</span></div><div class="line">*filter</div><div class="line">:INPUT ACCEPT [0:0]</div><div class="line">:FORWARD ACCEPT [0:0]</div><div class="line">:OUTPUT ACCEPT [0:0]</div><div class="line">-A INPUT -i virbr0 -p udp -m udp --dport 53 -j ACCEPT</div><div class="line">-A INPUT -i virbr0 -p tcp -m tcp --dport 53 -j ACCEPT</div><div class="line">-A INPUT -i virbr0 -p udp -m udp --dport 67 -j ACCEPT</div><div class="line">-A INPUT -i virbr0 -p tcp -m tcp --dport 67 -j ACCEPT</div><div class="line">-A INPUT -i virbr0 -p udp -m udp --dport 53 -j ACCEPT</div><div class="line">-A INPUT -i virbr0 -p tcp -m tcp --dport 53 -j ACCEPT</div><div class="line">-A INPUT -i virbr0 -p udp -m udp --dport 67 -j ACCEPT</div><div class="line">-A INPUT -i virbr0 -p tcp -m tcp --dport 67 -j ACCEPT</div><div class="line">-A INPUT -i virbr0 -p tcp -m tcp --dport 67 -j ACCEPT</div><div class="line">-A INPUT -p tcp -m tcp --dport 49152:49216 -j ACCEPT</div><div class="line">-A INPUT -p tcp -m tcp --dport 5900:6100 -j ACCEPT</div><div class="line">-A INPUT -p tcp -m tcp --dport 16509 -j ACCEPT</div><div class="line">-A INPUT -p tcp -m tcp --dport 1798 -j ACCEPT</div><div class="line">-A INPUT -p tcp -m tcp --dport 22 -j ACCEPT</div><div class="line">-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT</div><div class="line">-A INPUT -p icmp -j ACCEPT</div><div class="line">-A INPUT -i lo -j ACCEPT</div><div class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT</div><div class="line">-A INPUT -p udp -m state --state NEW -m udp --dport 5900 -j ACCEPT</div><div class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 5901 -j ACCEPT</div><div class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 8250 -j ACCEPT</div><div class="line">-A INPUT -j REJECT --reject-with icmp-host-prohibited</div><div class="line">-A FORWARD -i virbr0 -o virbr0 -j ACCEPT</div><div class="line">-A FORWARD -o virbr0 -j REJECT --reject-with icmp-port-unreachable</div><div class="line">-A FORWARD -i virbr0 -j REJECT --reject-with icmp-port-unreachable</div><div class="line">COMMIT</div><div class="line"><span class="comment"># Completed on Wed Jun  1 19:37:24 2016</span></div></pre></td></tr></table></figure>
<h2 id="二级存储及主存储路径需要设置权限，否则二级存储虽能挂载，但无法写入文件"><a href="#二级存储及主存储路径需要设置权限，否则二级存储虽能挂载，但无法写入文件" class="headerlink" title="二级存储及主存储路径需要设置权限，否则二级存储虽能挂载，但无法写入文件"></a>二级存储及主存储路径需要设置权限，否则二级存储虽能挂载，但无法写入文件</h2><h2 id="注意看日志文件，里面有详细的输出说明"><a href="#注意看日志文件，里面有详细的输出说明" class="headerlink" title="注意看日志文件，里面有详细的输出说明"></a>注意看日志文件，里面有详细的输出说明</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;按照官网的教程搭建&lt;a href=&quot;http://docs.cloudstack.apache.org/projects/cloudstack-installation/en/4.8/overview/index.html&quot; target=&quot;_blank&quot; rel=&quot;ext
    
    </summary>
    
      <category term="cloudsatck搭建" scheme="https://makeitpossible16.github.io/categories/cloudsatck%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="cloudsatck" scheme="https://makeitpossible16.github.io/tags/cloudsatck/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu下如何优雅地使用翻译</title>
    <link href="https://makeitpossible16.github.io/2016/10/26/ubuntu%E4%B8%8B%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E5%9C%B0%E4%BD%BF%E7%94%A8%E7%BF%BB%E8%AF%91/"/>
    <id>https://makeitpossible16.github.io/2016/10/26/ubuntu下如何优雅地使用翻译/</id>
    <published>2016-10-26T00:00:00.000Z</published>
    <updated>2016-11-26T15:39:42.885Z</updated>
    
    <content type="html"><![CDATA[<p>最近看英文文档比较多，但英语水平不咋地，需要借助翻译工具。在ubuntu下，有startdict、goldendict等字典，但字典毕竟是字典，解释太多，用着不太爽。平时喜欢用谷歌翻译，最近谷歌翻译的水平也的确提升了不少，可惜没有客户端，平时看个PDF啥的也用不了，github 上的发现mtranslate模块，把网址改为中国的网址，得到结果还挺快.</p>
<p>本来想写个接口封装一下，直接用goldendict显示的，无奈网络延迟太大，谷歌翻译都没出结果，字典的弹框就出来了，能找到goldendict的源码，但看到那一坨代码，实在没有修改的欲望。偶然的机会，发现了某道有ubuntu的客户端，解压出来，居然是python的代码，还是python大法好，这样就来优雅地改一下代码吧。<br>最后实现功能：<br>在弹框中显示调用mtranslate模块显示的翻译信息</p>
<p><img src="http://store-10069044.cos.myqcloud.com/myblogImage/20161017145304097youdao.png" alt=""></p>
<p>点击保存，将所翻译的单词保存到指定目录的translate.csv文件中</p>
<p><img src="http://store-10069044.cos.myqcloud.com/myblogImage/20161017145415567youdaoSave.png" alt=""></p>
<p>调整弹框显示，解决翻译文本过长导致弹框显示不全的问题</p>
<h1 id="实现代码："><a href="#实现代码：" class="headerlink" title="实现代码："></a>实现代码：</h1><h2 id="下载mtranslate模块"><a href="#下载mtranslate模块" class="headerlink" title="下载mtranslate模块"></a>下载<a href="https://github.com/mouuff/mtranslate" target="_blank" rel="external">mtranslate</a>模块</h2><h2 id="使用python3，先安装youdao的客户端，解决依赖关系，然后把youdao卸载。"><a href="#使用python3，先安装youdao的客户端，解决依赖关系，然后把youdao卸载。" class="headerlink" title="使用python3，先安装youdao的客户端，解决依赖关系，然后把youdao卸载。"></a>使用python3，先安装youdao的客户端，解决依赖关系，然后把youdao卸载。</h2><h2 id="下载-deb包，解压，参考文章http-www-cnblogs-com-scplee-archive-2016-05-13-5489024-html"><a href="#下载-deb包，解压，参考文章http-www-cnblogs-com-scplee-archive-2016-05-13-5489024-html" class="headerlink" title="下载.deb包，解压，参考文章http://www.cnblogs.com/scplee/archive/2016/05/13/5489024.html"></a>下载.deb包，解压，参考文章<a href="http://www.cnblogs.com/scplee/archive/2016/05/13/5489024.html" target="_blank" rel="external">http://www.cnblogs.com/scplee/archive/2016/05/13/5489024.html</a></h2><h2 id="在dae-utils-py增加代码"><a href="#在dae-utils-py增加代码" class="headerlink" title="在dae/utils.py增加代码"></a>在dae/utils.py增加代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_conf</span><span class="params">()</span>:</span>  </div><div class="line">    <span class="keyword">import</span>  json  </div><div class="line">    <span class="keyword">import</span> os  </div><div class="line">    <span class="keyword">with</span> open(<span class="string">'configuration.json'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:  </div><div class="line">        conf = json.load(f)  </div><div class="line">    <span class="keyword">return</span> conf</div></pre></td></tr></table></figure>
<h2 id="修改translate-py文件"><a href="#修改translate-py文件" class="headerlink" title="修改translate.py文件"></a>修改translate.py文件</h2><p>修改get_translate方法<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_translate</span><span class="params">(self, text)</span>:</span>  </div><div class="line">    data = &#123; <span class="string">"keyfrom"</span> : <span class="string">"deskdict.linux"</span>, <span class="string">"q"</span> : text.encode(<span class="string">"utf-8"</span>), <span class="string">"doctype"</span> : <span class="string">"xml"</span>, <span class="string">"xmlVersion"</span> : <span class="number">8.2</span>,  </div><div class="line">             <span class="string">"client"</span> : const.client, <span class="string">"id"</span> : <span class="string">"cee84504d9984f1b2"</span>, <span class="string">"vendor"</span>: <span class="string">"deskdict.linux"</span>,  </div><div class="line">             <span class="string">"in"</span> : <span class="string">"YoudaoDict"</span>, <span class="string">"appVer"</span> : <span class="string">"5.4.46.5554"</span>, <span class="string">"appZengqiang"</span> : <span class="number">0</span>, <span class="string">"le"</span> : <span class="string">"eng"</span>, <span class="string">"LTH"</span> : <span class="number">40</span>&#125;  </div><div class="line">    <span class="comment"># self.clear_translate()  </span></div><div class="line">    <span class="comment"># try:  </span></div><div class="line">    ret = requests.get(<span class="string">"http://dict.youdao.com/search"</span>, params=data).text  </div><div class="line">    ret = ret.encode(<span class="string">'utf-8'</span>)  </div><div class="line">    pq = PyQuery(ret, parser=<span class="string">"xml"</span>)  </div><div class="line">    test_data = &#123;<span class="string">"q"</span>: text, <span class="string">"type"</span>: <span class="number">1</span>, <span class="string">"pos"</span>: <span class="number">-1</span>, <span class="string">"client"</span>: const.client&#125;  </div><div class="line">    test_ret = json.loads(requests.get(<span class="string">"http://dict.youdao.com/jsonresult"</span>, params=test_data).text)  </div><div class="line">    self.translate_info.text = text  </div><div class="line">    text = str(text).replace(<span class="string">'\n'</span>,<span class="string">' '</span>)  </div><div class="line">    <span class="keyword">from</span> dae.utils <span class="keyword">import</span> get_conf  </div><div class="line">    conf = get_conf()  </div><div class="line">    self.translate_info.webtrans = <span class="string">"谷歌翻译:\n"</span>  </div><div class="line"></div><div class="line">    <span class="keyword">if</span> (str(conf[<span class="string">'useTranslateModule'</span>]).upper() == <span class="string">'TRUE'</span> ):  </div><div class="line">        self.translate_info.webtrans = self.translate_info.webtrans + useTranslateComponent(text) + <span class="string">"\n"</span>  </div><div class="line">    <span class="comment"># if self.translate_info.webtrans:  </span></div><div class="line">    self.translate_info.webtrans =self.translate_info.webtrans + <span class="string">"有道:\n"</span>  </div><div class="line">    self.translate_info.trans = <span class="string">'\n'</span>.join([PyQuery(l)(<span class="string">"i"</span>).text() <span class="keyword">for</span> l <span class="keyword">in</span> pq(<span class="string">'trs l'</span>)])  </div><div class="line">    self.translate_info.phonetic = test_ret.get(<span class="string">"ussm"</span>, <span class="string">""</span>)  </div><div class="line">    self.translate_info.webtrans = self.translate_info.webtrans + self.wrap_web_trans(pq)  </div><div class="line"></div><div class="line">    <span class="comment">#     self.translate_info.lang = test_ret.get("lang", "")  </span></div><div class="line">    <span class="comment">#  </span></div><div class="line">    <span class="comment"># except:  </span></div><div class="line">    <span class="comment">#     with open_offline_dict() as obj:  </span></div><div class="line">    <span class="comment">#         ret = obj.query(text)  </span></div><div class="line">    <span class="comment">#         if ret:  </span></div><div class="line">    <span class="comment">#             self.translate_info.text = text  </span></div><div class="line">    <span class="comment">#             self.translate_info.trans = ret[1].replace("\\n", "\n")  </span></div><div class="line">    <span class="comment">#             self.translate_info.phonetic = ret[0][1:-1]  </span></div><div class="line">    <span class="comment">#             self.translate_info.webtrans = "抱歉，从网络获取结果失败，请检测网络重试"  </span></div><div class="line">    <span class="comment">#             self.translate_info.lang = "eng"  </span></div><div class="line">    <span class="comment"># self.translate_info.voices = get_voice_simple(text)  </span></div><div class="line">    <span class="comment"># if not text:  </span></div><div class="line">    <span class="comment">#     return  </span></div><div class="line">    <span class="comment">#self.clear_translate()  </span></div><div class="line"></div><div class="line">    <span class="comment">#self.translate_info.text = text  </span></div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> self.translate_info.webtrans:  </div><div class="line">        self.translate_info.webtrans = <span class="string">"查询失败"</span>  </div><div class="line">    <span class="keyword">if</span> self.translate_info.webtrans:  </div><div class="line">        self.translateFinished.emit()</div></pre></td></tr></table></figure></p>
<h2 id="在translate-py中添加代码："><a href="#在translate-py中添加代码：" class="headerlink" title="在translate.py中添加代码："></a>在translate.py中添加代码：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">useTranslateComponent</span><span class="params">(text)</span>:</span>  </div><div class="line">    <span class="keyword">import</span> os</div><div class="line">    <span class="keyword">from</span> dae.utils <span class="keyword">import</span> get_conf</div><div class="line">    conf = get_conf()</div><div class="line">    toLang = conf[<span class="string">'toLang'</span>]</div><div class="line">    <span class="keyword">from</span> mtranslate <span class="keyword">import</span> translate</div><div class="line">    translation = translate(text,toLang)</div><div class="line">    <span class="keyword">return</span> translation</div></pre></td></tr></table></figure>
<h2 id="在windows-py添加类："><a href="#在windows-py添加类：" class="headerlink" title="在windows.py添加类："></a>在windows.py添加类：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#@ 保存到文件  </span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">saveToFile</span><span class="params">(QtCore.QObject)</span>:</span>  </div><div class="line"><span class="meta">    @QtCore.pyqtSlot(str, str)  </span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">saveToFile</span><span class="params">(self,fromText,toText)</span>:</span>  </div><div class="line">        <span class="keyword">import</span> os  </div><div class="line">        <span class="keyword">import</span> csv  </div><div class="line">        <span class="keyword">from</span> dae.utils <span class="keyword">import</span> get_conf  </div><div class="line">        toText = str(toText).replace(<span class="string">'谷歌翻译:'</span>,<span class="string">''</span>)  </div><div class="line">        toText = toText.split(<span class="string">'有道:'</span>)  </div><div class="line">        firstText = <span class="string">''</span>  </div><div class="line">        <span class="keyword">if</span> toText[<span class="number">0</span>]:  </div><div class="line">            firstText = toText[<span class="number">0</span>].strip(<span class="string">'\n'</span>)  </div><div class="line">        lastText = toText[<span class="number">1</span>].replace(<span class="string">'有道:'</span>,<span class="string">''</span>).strip(<span class="string">'\n'</span>).lstrip(<span class="string">'w. '</span>)  </div><div class="line">        <span class="keyword">if</span> (firstText <span class="keyword">or</span> lastText):  </div><div class="line">            <span class="keyword">if</span> <span class="keyword">not</span> firstText:  </div><div class="line">                firstText = <span class="string">' '</span>  </div><div class="line">            <span class="keyword">if</span> <span class="keyword">not</span> lastText:  </div><div class="line">                lastText = <span class="string">' '</span>  </div><div class="line">            conf = get_conf()  </div><div class="line">            savePath = str(conf[<span class="string">'savePath'</span>]).rstrip(<span class="string">'/'</span>) + <span class="string">'/translate.csv'</span>  </div><div class="line"></div><div class="line">            <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(savePath):  </div><div class="line">                <span class="keyword">with</span> open(savePath,<span class="string">'a+'</span>) <span class="keyword">as</span> f:  </div><div class="line">                    writer = csv.writer(f)  </div><div class="line">                    writer.writerow([<span class="string">'翻译内容'</span>,<span class="string">'谷歌翻译'</span>,<span class="string">'有道词典'</span>])  </div><div class="line">                    writeData = [  </div><div class="line">                        fromText, firstText, lastText  </div><div class="line">                    ]  </div><div class="line">                    writer.writerow(writeData)  </div><div class="line">                    f.close()  </div><div class="line">                <span class="keyword">return</span>  </div><div class="line">            <span class="keyword">with</span> open(savePath,<span class="string">'a+'</span>) <span class="keyword">as</span> f:  </div><div class="line">                writer = csv.writer(f)  </div><div class="line">                writeData = [  </div><div class="line">                    fromText, firstText, lastText  </div><div class="line">                ]  </div><div class="line">                writer.writerow(writeData)  </div><div class="line">                f.close()  </div><div class="line">            <span class="keyword">return</span>  </div><div class="line">        <span class="keyword">return</span></div></pre></td></tr></table></figure>
<h2 id="在window-py-的init-方法中添加代码"><a href="#在window-py-的init-方法中添加代码" class="headerlink" title="在window.py 的init()方法中添加代码"></a>在window.py 的<strong>init</strong>()方法中添加代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#@ 单词保存到文件  </span></div><div class="line">        self.saveToFile = saveToFile()  </div><div class="line">        self.qml_context.setContextProperty(<span class="string">"saveToFile"</span>, self.saveToFile) <span class="comment">#把saveToFile类暴露给qml文件</span></div></pre></td></tr></table></figure>
<h2 id="在TranslateContent-qml-添加TextEdit，位置自己看着办就行"><a href="#在TranslateContent-qml-添加TextEdit，位置自己看着办就行" class="headerlink" title="在TranslateContent.qml 添加TextEdit，位置自己看着办就行"></a>在TranslateContent.qml 添加TextEdit，位置自己看着办就行</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">TextEdit&#123;  </div><div class="line">            <span class="attr">color</span>: <span class="string">"#ff0000"</span>  </div><div class="line">            anchors.verticalCenter: parent.verticalCenter  </div><div class="line">            text: <span class="string">" 保存"</span>  </div><div class="line">            selectByMouse: <span class="literal">true</span>  </div><div class="line">            readOnly: <span class="literal">true</span>  </div><div class="line">            font.pixelSize: <span class="number">15</span>  </div><div class="line">            MouseArea &#123;  </div><div class="line">                anchors.fill: parent  </div><div class="line">                hoverEnabled: <span class="literal">true</span>  </div><div class="line">                onExited: &#123;  </div><div class="line">                    cursorShape = Qt.ArrowCursor  </div><div class="line">                &#125;  </div><div class="line">                onClicked: &#123;  </div><div class="line">                    saveToFile.saveToFile(translateInfo.text, translateInfo.webtrans)  </div><div class="line">                    <span class="keyword">if</span> (parent.color == <span class="string">"#2699eb"</span>)&#123;  </div><div class="line">                        parent.color = <span class="string">"#ff0000"</span>;  </div><div class="line">                    &#125;  </div><div class="line">                    <span class="keyword">else</span>&#123;  </div><div class="line">                        <span class="keyword">if</span>(parent.color == <span class="string">"#ff0000"</span>)&#123;  </div><div class="line">                            parent.color = <span class="string">"#2699eb"</span>  </div><div class="line">                        &#125;  </div><div class="line">                    &#125;  </div><div class="line">                &#125;  </div><div class="line">            &#125;  </div><div class="line">        &#125;</div></pre></td></tr></table></figure>
<h2 id="修改翻译内容显示方式"><a href="#修改翻译内容显示方式" class="headerlink" title="修改翻译内容显示方式"></a>修改翻译内容显示方式</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">TextEdit&#123;  </div><div class="line">            <span class="attr">id</span>: keywordsText  </div><div class="line">            width: parent.width  </div><div class="line">            <span class="comment">//anchors.verticalCenter: parent.verticalCenter  </span></div><div class="line">            selectByMouse: <span class="literal">true</span>  </div><div class="line">            readOnly: <span class="literal">true</span>  </div><div class="line">            text: translateInfo.text  </div><div class="line">            wrapMode: Text.WordWrap  </div><div class="line">            font.pixelSize: <span class="number">13</span>  </div><div class="line">            font.bold: <span class="literal">true</span>  </div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h2 id="在main-py所在文件夹下添加配置文件configuration-json，配置文件，可以选择是否启用translate模块，配置保存翻译信息文件位置，使用translate时系统调用的命令"><a href="#在main-py所在文件夹下添加配置文件configuration-json，配置文件，可以选择是否启用translate模块，配置保存翻译信息文件位置，使用translate时系统调用的命令" class="headerlink" title="在main.py所在文件夹下添加配置文件configuration.json，配置文件，可以选择是否启用translate模块，配置保存翻译信息文件位置，使用translate时系统调用的命令"></a>在main.py所在文件夹下添加配置文件configuration.json，配置文件，可以选择是否启用translate模块，配置保存翻译信息文件位置，使用translate时系统调用的命令</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;  </div><div class="line">  <span class="attr">"useTranslateModule"</span>: <span class="string">"true"</span>,  </div><div class="line">  <span class="attr">"savePath"</span>: <span class="string">"/home/ubuntu/Desktop"</span>,  </div><div class="line">  <span class="attr">"cmd"</span>: <span class="string">"translate -f en -t zh "</span>  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="保存，直接运行main-py-youdao-dict-backend-py就行"><a href="#保存，直接运行main-py-youdao-dict-backend-py就行" class="headerlink" title="保存，直接运行main.py youdao-dict-backend.py就行"></a>保存，直接运行main.py youdao-dict-backend.py就行</h2><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>直接利用youdao原有的事件处理，总体能用，但没有startdict或goldendict流畅，如果能直接修改startdict或goldendict的代码，利用它们的事件处理，估计会更稳定，不过最近比较忙,先凑合着用吧.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近看英文文档比较多，但英语水平不咋地，需要借助翻译工具。在ubuntu下，有startdict、goldendict等字典，但字典毕竟是字典，解释太多，用着不太爽。平时喜欢用谷歌翻译，最近谷歌翻译的水平也的确提升了不少，可惜没有客户端，平时看个PDF啥的也用不了，gith
    
    </summary>
    
      <category term="有道字典修改" scheme="https://makeitpossible16.github.io/categories/%E6%9C%89%E9%81%93%E5%AD%97%E5%85%B8%E4%BF%AE%E6%94%B9/"/>
    
    
      <category term="python" scheme="https://makeitpossible16.github.io/tags/python/"/>
    
      <category term="ubuntu" scheme="https://makeitpossible16.github.io/tags/ubuntu/"/>
    
  </entry>
  
</feed>
